// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_0___Store_App;

namespace Project_0___Store_App.Migrations
{
    [DbContext(typeof(DBContextClass))]
    partial class DBContextClassModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("Project_0___Store_App.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserName")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClientId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("Project_0___Store_App.Licence", b =>
                {
                    b.Property<int>("LicenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Company")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("LicenceId");

                    b.ToTable("Licences");
                });

            modelBuilder.Entity("Project_0___Store_App.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Project_0___Store_App.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClientId1")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LicenseIdLicenceId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LocationId1")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderId");

                    b.HasIndex("ClientId1");

                    b.HasIndex("LicenseIdLicenceId");

                    b.HasIndex("LocationId1");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Project_0___Store_App.Order", b =>
                {
                    b.HasOne("Project_0___Store_App.Client", "ClientId")
                        .WithMany()
                        .HasForeignKey("ClientId1");

                    b.HasOne("Project_0___Store_App.Licence", "LicenseId")
                        .WithMany()
                        .HasForeignKey("LicenseIdLicenceId");

                    b.HasOne("Project_0___Store_App.Location", "LocationId")
                        .WithMany()
                        .HasForeignKey("LocationId1");
                });
#pragma warning restore 612, 618
        }
    }
}
